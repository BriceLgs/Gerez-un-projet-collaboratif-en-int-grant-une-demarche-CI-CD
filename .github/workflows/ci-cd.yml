name: CI/CD Pipeline for BobApp

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuration de Java pour  back
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Configuration de Node.js pour front
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Cache pour Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Cache pour npm
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm

      # Installation front
      - name: Install front-end dependencies
        run: cd front && npm install

      # Verification Angular CLI
      - name: Verify Angular CLI
        run: cd front && npm install @angular/cli && export PATH=$PATH:./node_modules/.bin

      # tests front
      - name: Run front-end tests
        run: cd front && npm test -- --no-watch --no-progress --code-coverage --browsers=ChromeHeadless

      # Installation back
      - name: Install back-end dependencies
        run: cd back && mvn clean install -DskipTests

      # tests back
      - name: Run back-end tests
        run: cd back && mvn test

      # Analyse SonarCloud
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn sonar:sonar \
            -Dsonar.projectKey=BriceLgsSonar \
            -Dsonar.organization=brice-opc-org \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.branch.name=main \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # rapport de couverture
      - name: Generate coverage report
        run: |
          cd back
          mvn jacoco:report
          cd ../front
          npm run test -- --no-watch --no-progress --code-coverage --browsers=ChromeHeadless

      # Build back
      - name: Build back-end
        run: cd back && mvn package -DskipTests

      # Build front
      - name: Build front-end
        run: cd front && npm run build

      # Configuration docker
      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build & push
      - name: Build and push Docker images
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker build -t bricelgs/bobapp-back:latest ./back
          docker build -t bricelgs/bobapp-front:latest ./front
          docker push bricelgs/bobapp-back:latest
          docker push bricelgs/bobapp-front:latest